// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  password     String
  refreshToken String?
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userTickets UserTicket[]
}

model Ticket {
  id          String   @id @default(uuid())
  title       String
  description String
  imageUrl    String?
  expiresAt   DateTime
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userTickets UserTicket[]
}

model UserTicket {
  id        String   @id @default(uuid())
  userId    String
  ticketId  String
  qrCode    String
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  ticket Ticket @relation(fields: [ticketId], references: [id])

  @@unique([userId, ticketId]) // Um ticket por usuário (remova se quiser múltiplos iguais)
}
